%% mbes_channel_sim.m  –  Field-II multibeam raw-data generator
% Kyume – 2025-07-17

clear; close all; clc;

%% ---------- 0. 初始化 Field-II -----------------------------
addpath(genpath('.'));                 % 假设脚本与 Field-II 文件同级
field_init(-1);                        % -1: CPU 随机种子
c  = 1500;                             % 声速 (m/s)
fs = 4e6;                              % 采样率
set_field('c', c);
set_field('fs', fs);

%% ---------- 1. 定义阵列 ------------------------------------
f0      = 200e3;                       % 中心频率
lambda  = c / f0;
N_elem  = 64;                          % 阵元数
pitch   = lambda/2;
width   = 0.9*pitch;                   % 元宽
height  = lambda/2;                    % 元高
kerf    = pitch - width;               % 间隙

Tx = xdc_linear_array(N_elem, width, height, kerf, 1, 1, [0 0 0]);
Rx = Tx;                               % 单阵同发同收（可改为双阵）

%% ---------- 2. 设定激励与换能器脉冲响应 --------------------
t_imp = (0:4/f0)/fs;                   % 4 周期 Hanning 包络
imp   = sin(2*pi*f0*t_imp) .* hanning(numel(t_imp))';
xdc_impulse(Tx, imp);  xdc_impulse(Rx, imp);

t_exc = (0:1/f0)/fs;                   % 1 周期余弦激励
exc   = sin(2*pi*f0*t_exc);
xdc_excitation(Tx, exc);               % Tx 激励
xdc_excitation(Rx, exc);               % Rx 用于接收卷积

%% ---------- 3. 构造简单平底散射场 --------------------------
z_bottom   = 30;                       % 海底深度
x_span     = 60;                       % across-track 宽度
n_scatter  = 2000;                     % 点散射器数量

xs  = (rand(1,n_scatter)-0.5) * x_span;
ys  = zeros(1,n_scatter);              % 沿航向 0
zs  =  z_bottom * ones(1,n_scatter);
amp = 10.^(-rand(1,n_scatter)/20);     % 随机幅度 (Rayleigh)

scatter_pos  = [xs; ys; zs];
scatter_amp  = amp;

%% ---------- 4. 预分配输出数组 -------------------------------
rec_len   = 1e-3;                      % 1 ms 记录
Ns        = round(rec_len * fs);
N_beam    = 128;
channel_data = zeros(Ns, N_elem, N_beam, 'single');

%% ---------- 5. 循环扫描扇区，生成各波束通道数据 -------------
sector_deg = 90;
angles = linspace(-sector_deg/2, sector_deg/2, N_beam) * pi/180;

for b = 1:N_beam
    theta = angles(b);

    % ------ 5.1 发射波束指向 (远场近似) ----------------------
    steer_focus = [1e6*sin(theta) 0 1e6*cos(theta)];  % "无限远" 相当于平面波
    xdc_center_focus(Tx, [0 0 0]);
    xdc_focus(Tx, 0, steer_focus);

    % ------ 5.2 计算 Pulse-Echo 通道数据 ---------------------
scatterers = [scatter_pos; scatter_amp];   % 4×N
[rf, t0] = calc_hp(Tx, Rx, scatterers);    % (Ns_raw × N_elem)


    % ------ 5.3 把 rf 写入固定长度矩阵 ----------------------
    idx0 = round(t0*fs)+1;
    idx  = idx0 + (0:size(rf,1)-1);
    valid = idx <= Ns;
    channel_data(idx(valid), :, b) = single(rf(valid,:));
    
    fprintf('Beam %3d/%d  θ= %+6.2f°  samples=%d  t0=%.2fus\n',...
            b, N_beam, theta*180/pi, numel(find(valid)), t0*1e6);
end

%% ---------- 6. 清理 & 保存 ---------------------------------
xdc_free(Tx); xdc_free(Rx);

meta.fs       = fs;
meta.c        = c;
meta.angles   = angles;                % rad
meta.elem_pos = xdc_get(Tx, 'rect');   % [x y z] corners
meta.comment  = 'MBES raw channel data generated by Field II';

save('mbes_channel_data.mat', 'channel_data', 'meta', '-v7.3');
disp('>>> Simulation finished. Data saved to mbes_channel_data.mat');
